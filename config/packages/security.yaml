security:
    enable_authenticator_manager: true
    encoders:
        App\Entity\User:
            algorithm: auto
        App\Entity\Kid:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        app_kid_provider:
            entity:
                class: App\Entity\Kid
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main: 
            lazy: true
            custom_authenticator: App\Security\UserAuthenticator

        kid_secured_area:
            pattern:   ^/api/v1/login
            provider: app_kid_provider
            json_login:
                login_path: /api/v1/login/kid
                check_path: app_login_kid
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

            logout:
                path: app_logout

        user_secured_area:
            pattern:   ^/
            provider: app_user_provider
            json_login:
                login_path: /api/v1/login/user
                check_path: app_login_user
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            logout:
                path: app_logout
                
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_USER }
        - { path: ^/api/v1/login, roles: PUBLIC_ACCESS }

        - { path: ^/api/v1, roles: IS_AUTHENTICATED_FULLY }






        # public : /api/v1/users

        # IS_AUTHENTICATED_FULLY:
            #  /api/v1/categories
            # /api/v1/kids/{id}/books
            # /api/v1/kids/{id}/books/read
            # /api/v1/kids/{id}/books/wish
            # /api/v1/kids/{id}/category/{id}/books

            # /api/v1/kids/{id} ???

            # /api/v1/kids/{id}/avatars
            # /api/v1/kids/{id}/diplomas
            # /api/v1/kids/{id}/books CREATE
            # /api/v1/kids/{id}/books/progress_bar
            # /api/v1/kids/{id}/books/{id} GET
            # /api/v1/kids/{id}/books/last_read
            # /api/v1/avatars/{id}
            # /api/v1/diplomass/{id}

        # user : 
            # /api/v1/kids/{id}/bookkids/{id} DELETE
            # /api/v1/kids/{id}/bookkids/{id} PATCH
            # /api/v1/users/{id} GET
            # /api/v1/users/{id} DELETE
            # /api/v1/users/{id}/kids GET
            # /api/v1/users/{id}/kids CREATE
            # /api/v1/users/{id}/kids UPDATE
            # /api/v1/users/{id}/kids/{id} UPDATE
            # /api/v1/users/{id}/kids/{id} DELETE







    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_KID: ROLE_KID
